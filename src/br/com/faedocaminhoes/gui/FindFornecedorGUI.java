/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.faedocaminhoes.gui;

import br.com.faedocaminhoes.connection.ConnectionFactory;
import br.com.faedocaminhoes.gui.tablemodel.FornecedorTableModel;
import br.com.faedocaminhoes.gui.tablemodel.renderer.FornecedorTableRenderer;
import br.com.faedocaminhoes.model.Abastecimento;
import br.com.faedocaminhoes.model.Fornecedor;
import br.com.faedocaminhoes.model.service.FornecedorService;
import br.com.faedocaminhoes.uteis.JOptionPaneError;
import br.com.faedocaminhoes.uteis.UpperCase;
import java.awt.Toolkit;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Poison
 */
public class FindFornecedorGUI extends javax.swing.JDialog {

    private Fornecedor fornecedor;
    private FornecedorService fornecedorService;
    private FornecedorTableModel tableModel = new FornecedorTableModel();
    
    private EntityManager em;
    /**
     * Creates new form FindFornecedorGUI
     */
    public FindFornecedorGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public FindFornecedorGUI(java.awt.Frame parent, boolean modal, FornecedorService fornecedorService) {
        super(parent, modal);
        initComponents();
        setFornecedorService(fornecedorService);
        initComp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFornecedor = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Next Software ₢ - Busca de Fornecedores");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(153, 153, 153)));

        tableFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableFornecedorMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableFornecedor);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)), "Parâmetros de Busca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableFornecedorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFornecedorMousePressed
        if(evt.getClickCount() == 2){
            getTable();
            this.dispose();
        }
    }//GEN-LAST:event_tableFornecedorMousePressed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (txtSearch.getText().isEmpty() || txtSearch.getText() == null) {
                findAll();
            }
            findByParameter(txtSearch.getText().trim());
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtSearch.getText().isEmpty() || txtSearch.getText() == null) {
            findAll();
        }
        findByParameter(txtSearch.getText().trim());
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindFornecedorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindFornecedorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindFornecedorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindFornecedorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindFornecedorGUI dialog = new FindFornecedorGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableFornecedor;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    
    private void setIco() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }
    
    private FornecedorService setFornecedorService(FornecedorService fornecedorService){
        return this.fornecedorService = fornecedorService;
    }
    
    private void initComp(){
        setIco();
        setModel();
        findAll();
        txtSearch.setDocument(new UpperCase());
        txtSearch.requestFocus();
    }
    
    private void setModel(){
        tableFornecedor.setModel(tableModel);   
        tableFornecedor.setDefaultRenderer(Object.class, new FornecedorTableRenderer());
        tableFornecedor.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tableFornecedor.getColumnModel().getColumn(0).setPreferredWidth(50); //CODIGO
        tableFornecedor.getColumnModel().getColumn(1).setPreferredWidth(300); //RAZAO
        tableFornecedor.getColumnModel().getColumn(2).setPreferredWidth(300); //FANTASIA
        tableFornecedor.getColumnModel().getColumn(3).setPreferredWidth(180); //CPF/CNPJ
        tableFornecedor.getColumnModel().getColumn(4).setPreferredWidth(180); //TELEFONE
        tableFornecedor.getColumnModel().getColumn(5).setPreferredWidth(300); //EMAIL
    }
    
    private void findAll(){
        if(fornecedorService == null){
            JOptionPane.showMessageDialog(this, "FornecedorService was null", "Error", JOptionPane.ERROR_MESSAGE);
        }
        List<Fornecedor> list = fornecedorService.findAll();
        
        if(list != null){
            tableModel.removeAll();
            for(Fornecedor p : list){
                tableModel.addRow(p);
            } 
        }else{
            throw new IllegalAccessError("List was null");
        }    
    }
    
    public Fornecedor getTable(){
        fornecedor = new Fornecedor();
        if(tableFornecedor.getSelectedRow() != -1){
            fornecedor = tableModel.getObject(tableFornecedor.getSelectedRow());
            return fornecedor;
        }
        return null;
    }
    
    private void findByParameter(String parametro){
        em = new ConnectionFactory().getConection();
        try{
            //BUSCA REGISTRO PERSONALIZADO
            String sql = "FROM Fornecedor f WHERE 1=1 AND f.razao LIKE '%"+parametro+"%' OR f.fantasia LIKE '%"+parametro+"%'";
            
            Query query = em.createQuery(sql);
            //List filtrado
            List<Fornecedor> result = query.getResultList();
            if(result.isEmpty()){
                throw new IllegalAccessError("Register not found!");
            }
            //List com filtros
            tableModel.removeAll();
            for(Fornecedor a: result){
                tableModel.addRow(a);
            }
            
        }catch (NoResultException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro não encontrado", "Next Software ©", JOptionPane.INFORMATION_MESSAGE);
            findAll();
        } catch (IllegalAccessError ez) {
            ez.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro não encontrado", "Next Software ©", JOptionPane.INFORMATION_MESSAGE);
            findAll();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPaneError.showErrorDialog(this, "Erro", e);
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
}
