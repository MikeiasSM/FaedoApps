/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.floatsolutions.gui;

import br.com.floatsolutions.connection.ConnectionFactory;
import br.com.floatsolutions.gui.report.Report;
import br.com.floatsolutions.gui.tablemodel.AbastecimentoTableModel;
import br.com.floatsolutions.gui.tablemodel.renderer.AbastecimentoTableRenderer;
import br.com.floatsolutions.model.Abastecimento;
import br.com.floatsolutions.model.Empresa;
import br.com.floatsolutions.model.Fornecedor;
import br.com.floatsolutions.model.Pessoa;
import br.com.floatsolutions.model.Produto;
import br.com.floatsolutions.model.Usuario;
import br.com.floatsolutions.model.Veiculo;
import br.com.floatsolutions.model.service.AbastecimentoService;
import br.com.floatsolutions.model.service.FornecedorService;
import br.com.floatsolutions.model.service.PessoaService;
import br.com.floatsolutions.model.service.ProdutoService;
import br.com.floatsolutions.model.service.VeiculoService;
import br.com.floatsolutions.uteis.JPaneError;
import br.com.floatsolutions.uteis.JTextFieldNumeros;
import br.com.floatsolutions.uteis.ParseInteger;
import br.com.floatsolutions.uteis.UpperCase;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Poison
 */
public class AbastecimentoGUI extends javax.swing.JDialog {

    private Abastecimento abastecimento;
    private AbastecimentoService abasService;
    private Fornecedor fornecedor;
    private FornecedorService fornecedorService;
    private Pessoa pessoa;
    private PessoaService pessoaService;
    private Veiculo veiculo;
    private VeiculoService veiculoService;
    private Produto produto;
    private ProdutoService produtoService;
    private AbastecimentoTableModel tableModel = new AbastecimentoTableModel();
    private NumberFormat moeda = new DecimalFormat("#,##0.00");
    private Usuario usuario;
    private Empresa empresa;
    
    private EntityManager em;
    /**
     * Creates new form AbastecimentoGUI
     */
    public AbastecimentoGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public AbastecimentoGUI(java.awt.Frame parent, boolean modal, AbastecimentoService abasService, ProdutoService produtoService, Usuario usuario, Empresa empresa) {
        super(parent, modal);
        initComponents();
        setAbastecimentoService(abasService);
        setProdutoService(produtoService);
        setUsuario(usuario);
        setEmpresa(empresa);
        initComp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnNovoAbastecimento = new javax.swing.JButton();
        btnFiltrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBuscaFornecedor = new JTextFieldNumeros(10000);
        txtFornecedor = new javax.swing.JTextField();
        txtBuscaPessoa = new JTextFieldNumeros(10000);
        txtPessoa = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbCombustivel = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtBuscarVeiculo = new javax.swing.JTextField();
        txtVeiculo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dtInicio = new com.toedter.calendar.JDateChooser();
        dtFinal = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtN_Requisicao = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtN_Cupom = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTotAbastecimento = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblTotLitros = new javax.swing.JLabel();
        lblRegistros = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAbastecimentos = new javax.swing.JTable();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Next Software â‚¢ - Busca de Abastecimento");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));

        jPanel3.setBackground(new java.awt.Color(51, 76, 145));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        btnNovoAbastecimento.setBackground(new java.awt.Color(255, 255, 255));
        btnNovoAbastecimento.setText("Novo Abastecimento");
        btnNovoAbastecimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoAbastecimentoActionPerformed(evt);
            }
        });

        btnFiltrar.setBackground(new java.awt.Color(255, 255, 255));
        btnFiltrar.setText("Filtrar Abastecimentos");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnLimpar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpar.setText("Limpar Filtro");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSair.setBackground(new java.awt.Color(255, 255, 255));
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoAbastecimento, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnLimpar)
                            .addComponent(btnSair)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnImprimir)
                                .addComponent(btnFiltrar))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnNovoAbastecimento)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Fornecedor.:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Pessoa.:");

        txtBuscaFornecedor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBuscaFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaFornecedorKeyPressed(evt);
            }
        });

        txtFornecedor.setEditable(false);
        txtFornecedor.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtBuscaPessoa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBuscaPessoa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaPessoaKeyPressed(evt);
            }
        });

        txtPessoa.setEditable(false);
        txtPessoa.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Combustivel.:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Veiculo.:");

        txtBuscarVeiculo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBuscarVeiculo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarVeiculoKeyPressed(evt);
            }
        });

        txtVeiculo.setEditable(false);
        txtVeiculo.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)), "Periodo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Inicio.:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Final.:");

        dtInicio.setDateFormatString("dd/MM/yyyy");

        dtFinal.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel9});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dtInicio, jLabel9});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dtFinal, jLabel10});

        jLabel11.setText("NÂº RequisiÃ§Ã£o.:");

        txtN_Requisicao.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel12.setText("NÂº Cupom.:");

        txtN_Cupom.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBuscaFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(txtBuscaPessoa)
                    .addComponent(txtBuscarVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addComponent(txtPessoa)
                    .addComponent(txtVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbCombustivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtN_Requisicao)
                    .addComponent(txtN_Cupom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtBuscaFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBuscaPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtBuscarVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbCombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtN_Requisicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtN_Cupom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(51, 76, 145));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255)));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Abastecimentos.:");

        lblTotAbastecimento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTotAbastecimento.setForeground(new java.awt.Color(255, 255, 255));
        lblTotAbastecimento.setText("0,00");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Total de Litros.:");

        lblTotLitros.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTotLitros.setForeground(new java.awt.Color(255, 255, 255));
        lblTotLitros.setText("0,00");

        lblRegistros.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRegistros.setForeground(new java.awt.Color(255, 255, 255));
        lblRegistros.setText("0");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Registros");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegistros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotAbastecimento)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotLitros)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTotAbastecimento)
                    .addComponent(jLabel3)
                    .addComponent(lblTotLitros)
                    .addComponent(lblRegistros)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        tableAbastecimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableAbastecimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableAbastecimentosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableAbastecimentos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoAbastecimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoAbastecimentoActionPerformed
        CadAbastecimentoGUI cadAbastecimento = new CadAbastecimentoGUI(null, 
                                                                        true, 
                                                                        new AbastecimentoService(),
                                                                        new FornecedorService(),
                                                                        new ProdutoService(),
                                                                        new PessoaService(),
                                                                        new VeiculoService(),
                                                                        getSession(), getEmpresa());
        cadAbastecimento.setLocationRelativeTo(cadAbastecimento);
        cadAbastecimento.setVisible(true);
        findAll();
        popCombustivel();
    }//GEN-LAST:event_btnNovoAbastecimentoActionPerformed

    private void txtBuscaFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaFornecedorKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (txtBuscaFornecedor.getText() == null) {
                JOptionPane.showMessageDialog(this, "NescessÃ¡rio informar um valor!", "Nextsoft", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int id = ParseInteger.tryParseToInt(txtBuscaFornecedor.getText());
                findFornecedorbyId(id);
                txtBuscaPessoa.requestFocus();
           
            }
        }
        if(evt.getKeyCode() == evt.VK_F2){
            FindFornecedorGUI find = new FindFornecedorGUI(null, true, new FornecedorService());
            find.setLocationRelativeTo(find);
            find.setVisible(true);
            importFornecedor(find.getTable());
            txtBuscaPessoa.requestFocus();
        }
    }//GEN-LAST:event_txtBuscaFornecedorKeyPressed

    private void txtBuscaPessoaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaPessoaKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (txtBuscaPessoa.getText() == null) {
                JOptionPane.showMessageDialog(this, "NescessÃ¡rio informar um valor!", "Nextsoft", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int id = ParseInteger.tryParseToInt(txtBuscaPessoa.getText());
                findPessoabyId(id); 
                txtBuscarVeiculo.requestFocus();
            }
        }
        if(evt.getKeyCode() == evt.VK_F2){
            FindPessoaGUI find = new FindPessoaGUI(null, true, new PessoaService());
            find.setLocationRelativeTo(find);
            find.setVisible(true);
            importPessoa(find.getTable());
            txtBuscarVeiculo.requestFocus();
        }
    }//GEN-LAST:event_txtBuscaPessoaKeyPressed

    private void txtBuscarVeiculoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarVeiculoKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (txtBuscarVeiculo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "NescessÃ¡rio informar um valor!", "Nextsoft", JOptionPane.INFORMATION_MESSAGE);
            }else{
                String placa = txtBuscarVeiculo.getText().trim();
                findVeiculobyPlaca(placa);                
                txtBuscarVeiculo.requestFocus();
            }
        }
        if(evt.getKeyCode() == evt.VK_F2){
            FindVeiculoGUI find = new FindVeiculoGUI(null, true, new VeiculoService());
            find.setLocationRelativeTo(find);
            find.setVisible(true);
            importVeiculo(find.getTable());
            btnFiltrar.requestFocus();
        }
    }//GEN-LAST:event_txtBuscarVeiculoKeyPressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        if (txtBuscaFornecedor.getText().isEmpty() && txtBuscaPessoa.getText().isEmpty() && txtBuscarVeiculo.getText().isEmpty() && dtInicio.getDate() == null && dtFinal.getDate() == null && cbCombustivel.getSelectedItem() == null && txtN_Requisicao.getText().isEmpty() && txtN_Cupom.getText().isEmpty()) {
            findAll();
        } else {

            Integer idFornecedor = null;
            Integer idPessoa = null;
            Integer idProduto = null;
            Integer req = null;
            Integer cupom = null;
            String placaVeiculo = "";
            LocalDate dataInicio = null;
            LocalDate dataFinal = null;

            try {

                //Por Fornecedor
                if (txtBuscaFornecedor.getText().isEmpty()) {

                } else {
                    idFornecedor = ParseInteger.tryParseToInt(txtBuscaFornecedor.getText());
                }

                //Por Pessoa
                if (txtBuscaPessoa.getText().isEmpty()) {

                } else {
                    idPessoa = ParseInteger.tryParseToInt(txtBuscaPessoa.getText());
                }
                
                //Por RequisiÃ§Ã£o
                if (txtN_Requisicao.getText().isEmpty()) {

                } else {
                    req = ParseInteger.tryParseToInt(txtN_Requisicao.getText());
                }
                
                //Por Cupom
                if (txtN_Cupom.getText().isEmpty()) {

                } else {
                    cupom = ParseInteger.tryParseToInt(txtN_Cupom.getText());
                }

                //Por Placa
                if (txtBuscarVeiculo.getText().isEmpty()) {

                } else {
                    placaVeiculo = (txtBuscarVeiculo.getText().trim());
                }
                //Data Inicio
                if (dtInicio.getCalendar() != null) {
                    Calendar c1 = dtInicio.getCalendar();
                    Date input1 = c1.getTime();
                    dataInicio = input1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                }
                //Data Final
                if (dtFinal.getCalendar() != null) {
                    Calendar c2 = dtFinal.getCalendar();
                    Date input2 = c2.getTime();
                    dataFinal = input2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                }

                //Por Combustivel
                if (cbCombustivel.getSelectedItem() == null) {

                } else {
                    Produto saida = (Produto) cbCombustivel.getSelectedItem();
                    idProduto = saida.getId();
                }
                
                if(dtInicio.getDate() != null && dtFinal.getDate() != null){
                    if(dataInicio.isAfter(dataFinal)){
                        JOptionPane.showMessageDialog(this, "A data inicial deve ser anterior a data final", "Next Software â‚¢", JOptionPane.INFORMATION_MESSAGE);
                    }else if(dataFinal.isBefore(dataInicio)){
                        JOptionPane.showMessageDialog(this, "A data final deve ser posterior a data inicial", "Next Software â‚¢", JOptionPane.INFORMATION_MESSAGE);                    
                    }                    
                    findByParameter(idFornecedor, idPessoa, placaVeiculo, dataInicio, dataFinal, idProduto, req, cupom);
                }else{
                    findByParameter(idFornecedor, idPessoa, placaVeiculo, dataInicio, dataFinal, idProduto, req, cupom);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        txtBuscaFornecedor.setText("");
        txtFornecedor.setText("");
        txtBuscaPessoa.setText("");
        txtPessoa.setText("");
        txtBuscarVeiculo.setText("");
        txtVeiculo.setText("");
        dtInicio.setDate(null);
        dtFinal.setDate(null);
        cbCombustivel.setSelectedItem(null);
        findAll();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void tableAbastecimentosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAbastecimentosMousePressed
        if(evt.getClickCount() == 2){
            CadAbastecimentoGUI cadAbastecimento = new CadAbastecimentoGUI(null, 
                                                                        true, 
                                                                        new AbastecimentoService(),
                                                                        new FornecedorService(),
                                                                        new ProdutoService(),
                                                                        new PessoaService(),
                                                                        new VeiculoService(), 
                                                                        getSession(),
                                                                        getEmpresa());
            cadAbastecimento.setLocationRelativeTo(cadAbastecimento);
            cadAbastecimento.importData(getTable());
            cadAbastecimento.setVisible(true);
            findAll();
        }
        
    }//GEN-LAST:event_tableAbastecimentosMousePressed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        if(!tableModel.getDados().isEmpty()){
            List<Abastecimento> list = tableModel.getDados();
            String src = "c:/next/report/AbastecimentoPorFornecedor.jasper";
            Report.geraReport(list, null, src);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbastecimentoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbastecimentoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbastecimentoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbastecimentoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AbastecimentoGUI dialog = new AbastecimentoGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnNovoAbastecimento;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<Object> cbCombustivel;
    private com.toedter.calendar.JDateChooser dtFinal;
    private com.toedter.calendar.JDateChooser dtInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRegistros;
    private javax.swing.JLabel lblTotAbastecimento;
    private javax.swing.JLabel lblTotLitros;
    private javax.swing.JTable tableAbastecimentos;
    private javax.swing.JTextField txtBuscaFornecedor;
    private javax.swing.JTextField txtBuscaPessoa;
    private javax.swing.JTextField txtBuscarVeiculo;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtN_Cupom;
    private javax.swing.JTextField txtN_Requisicao;
    private javax.swing.JTextField txtPessoa;
    private javax.swing.JTextField txtVeiculo;
    // End of variables declaration//GEN-END:variables

    private void setIco() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }
    
    private Usuario setUsuario(Usuario usuario){
        return this.usuario = usuario;
    }
    
    private Empresa setEmpresa(Empresa empresa){
        return this.empresa = empresa;
    }
    
    private AbastecimentoService setAbastecimentoService(AbastecimentoService abasService){
        return this.abasService = abasService;
    }
    
    private ProdutoService setProdutoService(ProdutoService produtoService){
        return this.produtoService = produtoService;
    }
    
    private void initComp(){
        setIco();
        setModel();
        popCombustivel();
        findAll();
        txtBuscaFornecedor.requestFocus();
        txtBuscarVeiculo.setDocument(new UpperCase());
    }
    
    public Abastecimento getTable(){
        abastecimento = new Abastecimento();
        if(tableAbastecimentos.getSelectedRow() != -1){
            abastecimento = tableModel.getObject(tableAbastecimentos.getSelectedRow());
        }
        return abastecimento;   
    }
    
    private void setModel(){
        tableAbastecimentos.setModel(tableModel);
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tableAbastecimentos.getModel());
        this.tableAbastecimentos.setRowSorter(sorter);
        
        tableAbastecimentos.setDefaultRenderer(Object.class, new AbastecimentoTableRenderer());
        tableAbastecimentos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tableAbastecimentos.getColumnModel().getColumn(0).setPreferredWidth(90); //CODIGO
        tableAbastecimentos.getColumnModel().getColumn(1).setPreferredWidth(300); //FORNECEDOR
        tableAbastecimentos.getColumnModel().getColumn(2).setPreferredWidth(300); //PESSOA
        tableAbastecimentos.getColumnModel().getColumn(3).setPreferredWidth(300); //VEICULO
        tableAbastecimentos.getColumnModel().getColumn(4).setPreferredWidth(120); //DATA
        tableAbastecimentos.getColumnModel().getColumn(5).setPreferredWidth(180); //COMBUSTIVEL
        tableAbastecimentos.getColumnModel().getColumn(6).setPreferredWidth(100); //QUANTIDADE
        tableAbastecimentos.getColumnModel().getColumn(7).setPreferredWidth(100); //TOTAL
        tableAbastecimentos.getColumnModel().getColumn(8).setPreferredWidth(150); //RESPONSAVEL
        tableAbastecimentos.getColumnModel().getColumn(9).setPreferredWidth(100); //NÂº REQUISICAO
        tableAbastecimentos.getColumnModel().getColumn(10).setPreferredWidth(100); //NÂº CUPOM
        tableAbastecimentos.getColumnModel().getColumn(11).setPreferredWidth(180); //USUARIO
        tableAbastecimentos.getColumnModel().getColumn(12).setPreferredWidth(300); //OBSERVACAO
        tableAbastecimentos.getColumnModel().getColumn(13).setPreferredWidth(180); //INSTANTE LANCAMENTO
        tableAbastecimentos.getColumnModel().getColumn(14).setPreferredWidth(180); //INSTANTE LANCAMENTO
    }
    
    private void popCombustivel(){
        if(produtoService == null){
            JOptionPane.showMessageDialog(this, "ProdutoService was null", "Error", JOptionPane.ERROR_MESSAGE);
        }
        cbCombustivel.removeAllItems();
        for(Produto f : produtoService.findAll()){
            cbCombustivel.addItem(f);
        }
        cbCombustivel.setSelectedItem(null);
    }
    
    private void findAll(){
        if(abasService == null){
            JOptionPane.showMessageDialog(this, "AbastecimentoService was null", "Error", JOptionPane.ERROR_MESSAGE);
        }
        List<Abastecimento> list = abasService.findAll(getEmpresa());
        
        if(!list.isEmpty()){
            tableModel.removeAll();
            for(Abastecimento u: abasService.findAll(getEmpresa())){
                tableModel.addRow(u); 
            }  
            coutRegisters();
        }else{
            throw new IllegalAccessError("List was null");
        }
    }
    
    private void findFornecedorbyId(Integer id) {
        em = new ConnectionFactory().getConection();
        try {
            
            fornecedor = (Fornecedor) em.createQuery("SELECT u FROM Fornecedor u WHERE 1=1 AND u.id = " + id).getSingleResult();
            
            if (fornecedor == null) {
                JOptionPane.showMessageDialog(null, "Object not found!", "Next Software Â©", JOptionPane.ERROR_MESSAGE);
                throw new IllegalAccessError("Register not found!");
            }
            
            txtFornecedor.setText(fornecedor.getRazao());
            
        } catch (NoResultException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro nÃ£o encontrado", "Next Software Â©", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JPaneError.showErrorDialog(this, "Erro", e);
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
    
    private void findPessoabyId(Integer id) {
        em = new ConnectionFactory().getConection();
        try {
            
            pessoa = (Pessoa) em.createQuery("SELECT u FROM Pessoa u WHERE 1=1 AND u.id = " + id).getSingleResult();
            
            if (pessoa == null) {
                JOptionPane.showMessageDialog(null, "Object not found!", "Next Software Â©", JOptionPane.ERROR_MESSAGE);
                throw new IllegalAccessError("Register not found!");
            }
            
            txtPessoa.setText(pessoa.getNome());
            
        } catch (NoResultException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro nÃ£o encontrado", "Next Software Â©", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JPaneError.showErrorDialog(this, "Erro", e);
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
    private void findVeiculobyPlaca(String placa) {
        em = new ConnectionFactory().getConection();
        try {
            
            Query query = em.createQuery("SELECT obj FROM Veiculo obj WHERE 1=1 AND placa = :placa");
            query.setParameter("placa", placa);
            veiculo = (Veiculo) query.getSingleResult();
            
            if (veiculo == null) {
                JOptionPane.showMessageDialog(null, "Object not found!", "Next Software Â©", JOptionPane.ERROR_MESSAGE);
                throw new IllegalAccessError("Register not found!");
            }
            
            txtVeiculo.setText(veiculo.getFabricante().getDescricao()+" - "+veiculo.getModelo()+" - "+veiculo.getCor());
            
        } catch (NoResultException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro nÃ£o encontrado", "Next Software Â©", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JPaneError.showErrorDialog(this, "Erro", e);
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
    
    private void coutRegisters(){
        em = new ConnectionFactory().getConection();
        try {
            //BUSCA REGISTRO PERSONALIZADO
            String sqlQtdR  = "SELECT COUNT(*) FROM Abastecimento ab WHERE ab.empresa = "+getEmpresa().getId();
            String sqlQtd   = "SELECT DISTINCT SUM(ab.quantidade) FROM Abastecimento ab WHERE ab.empresa = "+getEmpresa().getId();
            String sqlValor = "SELECT DISTINCT SUM(ab.vlr_total) FROM Abastecimento ab WHERE ab.empresa = "+getEmpresa().getId();
            
            Query queryCount = em.createQuery(sqlQtdR);
            Query queryQtd = em.createQuery(sqlQtd);
            Query queryValor = em.createQuery(sqlValor);
            //Recebe Quantidade de Registros
            Long count = (Long) queryCount.getSingleResult();
            Integer c = Math.toIntExact(count);
            //Recebe Quantidade
            BigDecimal qtd = (BigDecimal) queryQtd.getSingleResult();
            //Recebe Valor Total
            BigDecimal valor = (BigDecimal) queryValor.getSingleResult();
            
            //Seta Quantidade de Registros
            lblRegistros.setText(String.valueOf(c));
            //Seta Quantidade
            lblTotLitros.setText(moeda.format(qtd));
            //Seta Valor Total
            lblTotAbastecimento.setText(moeda.format(valor));
        } catch (Exception e){
            e.printStackTrace();
        } finally {
            if (em != null) {
                em.close();
            }
        }    
    }
    private void findByParameter(Integer idFornecedor, Integer idPessoa, String placa, LocalDate dtInicio, LocalDate dtFinal, Integer idProduto, Integer req, Integer cupom){
        em = new ConnectionFactory().getConection();
        try{
            //BUSCA REGISTRO PERSONALIZADO
            String sql = "FROM Abastecimento ab WHERE 1=1 AND ab.empresa = "+getEmpresa().getId();
            String sqlQtdR = "SELECT COUNT(*) FROM Abastecimento ab WHERE 1=1 AND ab.empresa = "+getEmpresa().getId();
            String sqlQtd = "SELECT DISTINCT SUM(ab.quantidade) FROM Abastecimento ab WHERE 1=1 AND ab.empresa = "+getEmpresa().getId();
            String sqlValor = "SELECT DISTINCT SUM(ab.vlr_total) FROM Abastecimento ab WHERE 1=1 AND ab.empresa = "+getEmpresa().getId();
            
            //Por Fornecedor
            if(idFornecedor != null && idFornecedor > 0){
                sql += " AND ab.fornecedor = "+idFornecedor;
                sqlQtdR += " AND ab.fornecedor = "+idFornecedor;
                sqlQtd += " AND ab.fornecedor = "+idFornecedor;
                sqlValor += " AND ab.fornecedor = "+idFornecedor;
            }
            //Por Pessoa
            if(idPessoa != null && idPessoa > 0){
                sql += " AND ab.pessoa = "+idPessoa;
                sqlQtdR += " AND ab.pessoa = "+idPessoa;
                sqlQtd += " AND ab.pessoa = "+idPessoa;
                sqlValor+= " AND ab.pessoa = "+idPessoa;
            }
            //Por RequisiÃ§Ã£o
            if(req != null && req >= 0){
                sql += " AND ab.n_requisicao = "+req;
                sqlQtdR += " AND ab.n_requisicao = "+req;
                sqlQtd += " AND ab.n_requisicao = "+req;
                sqlValor += " AND ab.n_requisicao = "+req;
            }
            //Por Cupom
            if(cupom != null && cupom >= 0){
                sql += " AND ab.n_cupom = "+cupom;
                sqlQtdR += " AND ab.n_cupom = "+cupom;
                sqlQtd += " AND ab.n_cupom = "+cupom;
                sqlValor += " AND ab.n_cupom = "+cupom;
            }
            //Por Placa
            if(placa != null && !placa.isEmpty()){
                sql += " AND ab.veiculo.placa = '"+placa+"'";
                sqlQtdR += " AND ab.veiculo.placa = '"+placa+"'";
                sqlQtd += " AND ab.veiculo.placa = '"+placa+"'";
                sqlValor += " AND ab.veiculo.placa = '"+placa+"'";
            }
            
            //Por Data
            if(dtInicio != null && dtFinal != null){
                sql += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";
                sqlQtdR += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";
                sqlQtd += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";
                sqlValor += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";
            }
            if (dtInicio != null && dtFinal == null){
                sql += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' ";
                sqlQtdR += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' ";
                sqlQtd += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' ";
                sqlValor += " AND ab.data_abastecimento >= '"+dtInicio.toString()+"' ";
            }
            if (dtInicio == null && dtFinal != null){
                sql += " AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";          
                sqlQtdR += " AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";          
                sqlQtd += " AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";          
                sqlValor += " AND ab.data_abastecimento <= '"+dtFinal.toString()+"' ";          
            }
            //Por Produto
            if(idProduto != null && idProduto > 0){
                sql += " AND ab.produto = "+idProduto;
                sqlQtdR += " AND ab.produto = "+idProduto;
                sqlQtd += " AND ab.produto = "+idProduto;
                sqlValor += " AND ab.produto = "+idProduto;
            }
            
            Query query = em.createQuery(sql);
            Query queryCount = em.createQuery(sqlQtdR);
            Query queryCountQtd = em.createQuery(sqlQtd);
            Query queryValor = em.createQuery(sqlValor);

            //List filtrado
            List<Abastecimento> resultSql = query.getResultList();
            
            //List Count
            Long count = (Long) queryCount.getSingleResult();
            Integer c = Math.toIntExact(count);
            
            BigDecimal qtd = (BigDecimal) queryCountQtd.getSingleResult();
            
            BigDecimal valor = (BigDecimal) queryValor.getSingleResult();
            
            if(resultSql.isEmpty()){
                throw new IllegalAccessError("Register not found!");
            }
            //List com filtros
            tableModel.removeAll();
            for(Abastecimento a: resultSql){
                tableModel.addRow(a);
            }
            //Quantidade de Registros
            lblRegistros.setText(String.valueOf(c));
            //Seta Quantidade
            lblTotLitros.setText(moeda.format(qtd));
            //Seta Valor Total
            lblTotAbastecimento.setText(moeda.format(valor));
        }catch (NoResultException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro nÃ£o encontrado", "Next Software Â©", JOptionPane.INFORMATION_MESSAGE);
            findAll();
        } catch (IllegalAccessError ez) {
            ez.printStackTrace();
            JOptionPane.showMessageDialog(this, "Registro nÃ£o encontrado", "Next Software Â©", JOptionPane.INFORMATION_MESSAGE);
            findAll();
        } catch (Exception e) {
            e.printStackTrace();
            JPaneError.showErrorDialog(this, "Erro", e);
        } finally {
            if (em != null) {
                em.close();
            }
        }
    }
    
    private void importFornecedor(Fornecedor fornecedor){
        if(fornecedor != null){
            txtBuscaFornecedor.setText(fornecedor.getId().toString());
            txtFornecedor.setText(fornecedor.getRazao());
        }
    }
    
    private void importPessoa(Pessoa pessoa){
        if(pessoa != null){
            txtBuscaPessoa.setText(pessoa.getId().toString());
            txtPessoa.setText(pessoa.getNome());
        }
    }
    
    private void importVeiculo(Veiculo veiculo){
        if(veiculo != null){
            txtBuscarVeiculo.setText(veiculo.getPlaca());
            txtVeiculo.setText(veiculo.getFabricante().getDescricao()+" - "+veiculo.getModelo()+" - "+veiculo.getCor());
        }
    }
    
    private Usuario getSession() {
        if (usuario == null) {
            throw new IllegalArgumentException("Usuario was null!");
        }
        return usuario;
    }

    private Empresa getEmpresa() {
        if (empresa == null) {
            throw new IllegalArgumentException("Empresa was null!");
        }
        return empresa;
    }
}
